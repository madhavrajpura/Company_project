@model DataAccessLayer.ViewModels.EmployeeViewModel;
@{
    ViewData["Title"] = "Home Page";
}

<!-- Start Main Content -->
<div class="container-fluid m-0 p-0" style="background-color: rgb(250, 250, 250);">
    <!-- Start Upper Div -->
    <div class="d-sm-flex justify-content-between p-md-4 p-3 pb-2 pt-5">
        <h3 class="custom-text-color">Employee List</h3>
        <div class="search-div d-flex align-items-center justify-content-end gap-2">
            <div class="search-button">
                <input type="text" id="searchbtn" placeholder="Search by Name, Email, Department, Position" class="p-2 border rounded text-truncate">
            </div>
            <div class="add-Employee-button">
                <button class="btn SaveEmployeeId solid-btn text-light p-2 text-size text-nowrap" data-bs-toggle="modal" title="Add Employee" data-bs-target="#SaveEmployeeModal" data-id="0">+ Add Employee</button>
            </div>
        </div>
    </div>
    <!-- End Upper Div -->
    <!-- Start Employee List -->
    <div class="container-fluid p-0 pe-md-4 pe-3">
        <div class="table-main-div table-responsive p-3 bg-white ms-md-4 ms-3 me-0 shadow-lg" style="border-top-right-radius: 10px; border-top-left-radius: 10px;">
            <table id="table" class="table">
                <thead>
                    <tr class="border border-top-0 border-end-0 border-start-0 border-dark">
                        <th scope="col" class="fw-bold text-start text-nowrap"># Employee ID <i class="bi bi-arrow-down-up ps-1" id="sortable-id" data-column="ID" data-direction="asc" style="cursor: pointer;"></i></th>
                        <th scope="col" class="fw-bold text-start text-nowrap">Name <i class="bi bi-arrow-down-up ps-1" id="sortable-name" data-column="Name" data-direction="asc" style="cursor: pointer;"></i></th>
                        <th scope="col" class="fw-bold text-start text-nowrap">Email</th>
                        <th scope="col" class="fw-bold text-start text-nowrap">Department <i class="bi bi-arrow-down-up ps-1" id="sortable-department" data-column="Department" data-direction="asc" style="cursor: pointer;"></i></th>
                        <th scope="col" class="fw-bold text-start text-nowrap">Position</th>
                        <th scope="col" class="fw-bold text-start text-nowrap">Actions</th>
                    </tr>
                </thead>
                <tbody id="EmployeeTableBody"></tbody>
            </table>
        </div>
        <div class="pagination-main-div shadow d-flex justify-content-end gap-2 p-3 pt-0 bg-white ps-3 ms-md-4 ms-3 pe-3" style="border-bottom-right-radius: 10px; border-bottom-left-radius: 10px;">
            <span class="pt-2">Items Per page:</span>
            <select id="itemselect">
                <option value="3">3</option>
                <option value="5">5</option>
                <option value="10">10</option>
            </select>
            <span class="pt-2 ps-1" id="pagination-info"></span>
            <button id="left-arrow" class="btn border border-dark bg-light ps-2"><</button>
            <button id="right-arrow" class="btn border border-dark bg-light ps-2">></button>
        </div>
    </div>
    <!-- End Employee List -->
</div>
<!-- End Main Content -->
<!------------------------------------------------ Modals ------------------------------------------------------>
<!-- Save Employee Modal -->
<div id="SaveEmployeeModal" class="modal fade" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="SaveEmployee-Content"></div>
</div>
<!-- Delete Employee Modal -->
<div class="modal fade" id="DeleteEmployeeModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5 fw-bold text-secondary">Delete Employee Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-center">
                    <i class="fa-solid fa-triangle-exclamation fa-3x text-warning"></i>
                </div>
                <p class="fw-semibold text-secondary text-center mb-3 pt-2">Are you sure you want to delete this Employee?</p>
                <form id="DeleteEmployeeFrom">
                    <input type="hidden" asp-for="@Model.EmployeeId" id="DeleteEmployeeId" name="employeeid">
                    <div class="modal-footer mt-3 d-flex justify-content-center">
                        <button type="submit" class="btn solid-btn" data-bs-dismiss="modal">Yes</button>
                        <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Add Attendance Modal -->
<div id="SaveAttendanceModal" class="modal fade" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="SaveAttendanceModal_Content"></div>
</div>
<!-- Edit Attendance Modal -->
<div id="EditAttendanceModal" class="modal fade" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="EditAttendanceModal_Content"></div>
</div>
<!-- Delete Attendance Modal -->
<div class="modal fade" id="DeleteAttendanceModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5 fw-bold text-secondary">Delete Attendance Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-center">
                    <i class="fa-solid fa-triangle-exclamation fa-3x text-warning"></i>
                </div>
                <p class="fw-semibold text-secondary text-center mb-3 pt-2">Are you sure you want to delete this attendance record?</p>
                <form id="DeleteAttendanceForm">
                    <input type="hidden" asp-for="@Model.EmployeeId" id="DeleteAttendanceEmployeeId" name="employeeId">
                    <input type="hidden" asp-for="@Model.AttendanceId" id="DeleteAttendanceId" name="attendanceId">
                    <div class="modal-footer mt-3 d-flex justify-content-center">
                        <button type="submit" class="btn solid-btn" data-bs-dismiss="modal">Yes</button>
                        <button type="button" class="btn hollow-btn" data-bs-dismiss="modal">No</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Initialization
        let currentPage = 1;
        let pageSize = $("#itemselect").val();
        let searchText = "";
        let sortColumn = "ID";
        let sortDirection = "asc";
        // Function to get EmployeeId for Delete
        function GetIdForDeleteEmployee(tag) {
            let employeeid = $(tag).data("id");
            $("#DeleteEmployeeId").val(employeeid);
        }
        // Function to get EmployeeId for Delete Attendance
        function GetIdForDeleteAttendance(tag) {
            let employeeId = $(tag).data("id");
            let attendanceId = $(tag).data("attenid");
            $("#DeleteAttendanceEmployeeId").val(employeeId);
            $("#DeleteAttendanceId").val(attendanceId);
        }
        // Pagination Function
        function Pagination(page = 1, search = "", pageSize = 3, sortColumn = "Name", sortDirection = "asc") {
            $.ajax({
                url: "/Home/GetEmployeeList",
                type: "GET",
                data: { pageNumber: page, search, pageSize, sortColumn, sortDirection },
                success: function (data) {
                    $("#EmployeeTableBody").html(data);
                    currentPage = page;
                    pageSize = parseInt(pageSize);
                    var totalRecords = parseInt($("#totalRecords").val()) || 0;
                    var startItem = totalRecords === 0 ? 0 : (currentPage - 1) * pageSize + 1;
                    var endItem = Math.min(currentPage * pageSize, totalRecords);
                    $("#pagination-info").text("Showing " + startItem + " - " + endItem + " of " + totalRecords);
                    $("#left-arrow").prop("disabled", currentPage === 1);
                    $("#right-arrow").prop("disabled", currentPage * pageSize >= totalRecords);
                },
                error: function () {
                    callErrorToaster("Ajax Error Loading data");
                }
            });
        }
        // GET - Save Employee Modal
        $(document).on('click', ".SaveEmployeeId", function (event) {
            var id = $(this).data("id");
            $.ajax({
                url: "/Home/SaveEmployee",
                type: "GET",
                data: { employeeid: id },
                success: function (data) {
                    $("#SaveEmployee-Content").html(data);
                },
                error: function () {
                    callErrorToaster("Ajax Error Loading data");
                }
            });
        });
        // GET Add Attendance Modal
        $(document).on('click', ".OpenAttendanceModal", function (event) {
            event.preventDefault();
            var employeeId = $(this).data("id");
            $.ajax({
                url: "/Home/GetAttendance",
                type: "GET",
                data: { employeeId: employeeId, attendanceId: 0 },
                success: function (data) {
                    $("#SaveAttendanceModal_Content").html(data);
                },
                error: function () {
                    callErrorToaster("Error loading attendance data");
                }
            });
        });
        // GET Edit Attendance Modal
        $(document).on('click', ".edit-attendance", function (event) {
            event.preventDefault();
            var employeeId = $(this).data("id");
            var attendanceId = $(this).data("attenid");
            $.ajax({
                url: "/Home/GetAttendance",
                type: "GET",
                data: { employeeId: employeeId, attendanceId: attendanceId },
                success: function (data) {
                    $("#EditAttendanceModal_Content").html(data);
                },
                error: function () {
                    callErrorToaster("Error loading attendance data");
                }
            });
        });
        // Delete Attendance
        $(document).on('click', '.delete-attendance', function () {
            var employeeId = $(this).data('id');
            var attendanceId = $(this).data('attenid');
            $("#DeleteAttendanceEmployeeId").val(employeeId);
            $("#DeleteAttendanceId").val(attendanceId);
            $("#DeleteAttendanceModal").modal("show");
        });
        // Delete Attendance POST
        $(document).on("submit", "#DeleteAttendanceForm", function (e) {
            e.preventDefault();
            let employeeId = $("#DeleteAttendanceEmployeeId").val();
            let attendanceId = $("#DeleteAttendanceId").val();
            $.ajax({
                url: "/Home/DeleteAttendance",
                type: "POST",
                data: { employeeId: employeeId, attendanceId: attendanceId },
                success: function (data) {
                    if (data.success) {
                        callSuccessToaster(data.text);
                        $("#DeleteAttendanceModal").modal("hide");
                        $("#SaveAttendanceModal").modal("hide");
                        $("#EditAttendanceModal").modal("hide");
                        Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
                    } else {
                        callErrorToaster(data.text);
                    }
                },
                error: function () {
                    callErrorToaster("Error deleting attendance");
                }
            });
        });
        
        $(document).ready(function () {

            // Initial table load
            Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);

            // Search
            $("#searchbtn").on("keyup", function () {
                searchText = $(this).val().trim();
                currentPage = 1;
                Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
            });

            // Right arrow
            $("#right-arrow").on("click", function () {
                if (!$(this).prop("disabled")) {
                    currentPage++;
                    Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
                }
            });

            // Left arrow
            $("#left-arrow").on("click", function () {
                if (!$(this).prop("disabled")) {
                    currentPage--;
                    Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
                }
            });
            
            // Item per Page
            $("#itemselect").on("change", function () {
                pageSize = $(this).val();
                currentPage = 1;
                Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
            });

            // Sorting By ID
            $("#sortable-id").on("click", function () {
                sortColumn = $(this).data("column");
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
            });

            // Sorting By Name
            $("#sortable-name").on("click", function () {
                sortColumn = $(this).data("column");
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
            });

            // Sorting By Department
            $("#sortable-department").on("click", function () {
                sortColumn = $(this).data("column");
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
            });

            // Delete Employee POST
            $(document).on("submit", "#DeleteEmployeeFrom", function (e) {
                e.preventDefault();
                let employeesid = $("#DeleteEmployeeId").val();
                $.ajax({
                    url: "/Home/DeleteEmployee",
                    type: "POST",
                    data: { employeeid: employeesid },
                    success: function (data) {
                        if (data.success) {
                            callSuccessToaster(data.text);
                            currentPage = 1;
                            Pagination(currentPage, searchText, pageSize, sortColumn, sortDirection);
                            $(".btn-close").click();
                        } else {
                            callErrorToaster(data.text);
                        }
                    },
                    error: function () {
                        callErrorToaster("Error Loading data");
                    }
                });
            });
        });
    </script>
}